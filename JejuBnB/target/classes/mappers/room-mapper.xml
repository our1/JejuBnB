<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="roomMapper">
	<resultMap type="Room" id="resultRoom">
		<id property="room_no" column="room_no" />
		<result property="user_id" column="user_id" />	
		<result property="room_name" column="room_name" />	
		<result property="room_content" column="room_content" />	
		<result property="room_address" column="room_address" />
		<result property="room_roadaddress" column="room_roadaddress" />
		<result property="st_num_people" column="st_num_people" />		
		<result property="max_people" column="max_people" />	
		<result property="checkin_time" column="checkin_time" />	
		<result property="checkout_time" column="checkout_time" />	
		<result property="bed" column="bed" />	
		<result property="bedroom" column="bedroom" />	
		<result property="bathroom" column="bathroom"/>	
		<result property="amenity" column="amenity" />	
		<result property="facility" column="facility" />	
		<result property="build_type" column="build_type" />	
		<result property="rule" column="rule" />	
		<result property="pass_or_not" column="pass_or_not" />	
		<result property="plus_charge" column="plus_charge" />	
		<result property="room_weekday" column="room_weekday" />	
		<result property="room_weekend" column="room_weekend" />			
	</resultMap>
	
	<resultMap type="Room" id="resultList">
		<id property="room_no" column="room_no" />
		<result property="user_id" column="user_id" />	
		<result property="room_name" column="room_name" />	
		<result property="room_content" column="room_content" />	
		<result property="room_address" column="room_address" />	
		<result property="room_roadaddress" column="room_roadaddress" />
		<result property="st_num_people" column="st_num_people" />	
		<result property="max_people" column="max_people" />	
		<result property="checkin_time" column="checkin_time" />	
		<result property="checkout_time" column="checkout_time" />	
		<result property="bed" column="bed" />	
		<result property="bedroom" column="bedroom" />	
		<result property="bathroom" column="bathroom"/>	
		<result property="amenity" column="amenity" />	
		<result property="facility" column="facility" />	
		<result property="build_type" column="build_type" />	
		<result property="rule" column="rule" />	
		<result property="pass_or_not" column="pass_or_not" />	
		<result property="plus_charge" column="plus_charge" />	
		<result property="room_weekday" column="room_weekday" />	
		<result property="room_weekend" column="room_weekend" />	
	</resultMap>
	
	<resultMap id="resultRfList" type="Room_File">
		<id property="room_file_no" column="room_file_no" />
		<result property="room_no" column="room_no" />
		<result property="original_file" column="original_file" />
		<result property="rename_file" column="rename_file" />		
	</resultMap>
	
	<resultMap id="resultMyRoom" type="MyRoom">
		<result property="room_no" column="room_no"/>
		<result property="user_id" column="user_id" />
	</resultMap>
	
	<resultMap id="resultRoomNo" type="Room">
		<id property="room_no" column="room_no" />
	</resultMap>
	
	<resultMap id="resultRoomLatLng" type="RoomLatLng">
		<id property="room_no" column="room_no" />
		<result property="room_lat" column="room_lat" />
		<result property="room_lng" column="room_lng" />
	</resultMap>
	
	<!-- 전체 게시글 갯수 조회 -->
	<select id="getListCount" resultType="_int">
		select count(room_no) from room
	</select>
	
	<!-- 예약된 게시글 번호 조회애 와서 값을 넣어서 예약되지 않은 게시글 조회 -->
	<select id="selectChkList" parameterType="java.util.HashMap" resultMap="resultList">
		select * from (select rownum rnum, room_no, user_id, room_name, room_content, room_address, room_roadaddress, max_people, checkin_time, checkout_time, bed, bedroom, 
		bathroom, amenity, facility, build_type, rule, pass_or_not, st_num_people, plus_charge, room_weekday, room_weekend from room where room_no != 0
		<foreach collection="list" item="room">
			and room_no != #{room.room_no}
		</foreach>
		<if test="Stpeople != null" >
			<![CDATA[
				and st_num_people <= #{Stpeople}
			]]>
		</if>
		
		<if test="Stpeople == null" >
			<![CDATA[
				and st_num_people <= #{people}
			]]>
		</if>
		<![CDATA[
		and max_people >= #{people}
		
		
			
		order by room_no)
		where rnum >= #{startRow} and rnum <= #{endRow}
		]]>
	</select>
	
	<!-- 날짜입력받아 그날짜에 예약된 숙소 번호 조회 -->
	<select id="selectChkRNList" parameterType="java.util.HashMap" resultMap="resultRoomNo">
		select room_no from reservation
		where checkin_date = to_date(#{checkin},'YY/MM/DD') and
		checkout_date = to_date(#{checkout}, 'YY/MM/DD')
	</select>
	
	<!-- 예약 여부 없이 숙소 조회 -->
	<select id="selectList" parameterType="com.jeju.JejuBnB.room.model.vo.PageCount" resultMap="resultList">
	<![CDATA[
		select * from(select rownum rnum, room_no, user_id, room_name, room_content, room_address, room_roadaddress, max_people, checkin_time, checkout_time, bed, bedroom, 
		bathroom, amenity, facility, build_type, rule, pass_or_not, st_num_people, plus_charge, room_weekday, room_weekend from room order by room_no desc)
		where rnum >= #{startRow} and rnum <= #{endRow}
		]]>
	</select>
	
	<!-- 게시판형 숙소 조회 -->
	<select id="selectBList" parameterType="com.jeju.JejuBnB.room.model.vo.PageCount" resultMap="resultList">
	<![CDATA[
		select * from(select rownum rnum, room_no, user_id, room_name, room_content, room_address, room_roadaddress, max_people, checkin_time, checkout_time, bed, bedroom, 
		bathroom, amenity, facility, build_type, rule, pass_or_not, st_num_people, plus_charge, room_weekday, room_weekend from room order by room_no desc)
		where rnum >= #{startRow} and rnum <= #{endRow}
		]]>
	</select>
	
	<!-- 오늘 날짜 예약 내역 조회 -->
	<select id="selectSysdate" resultMap="resultRoomNo">
		select room_no from reservation
		where checkin_date like sysdate and
		checkout_date like sysdate + 1
	</select>
	
	<!-- 게시글 사진파일들 조회 -->
	<select id="selectRoomFileList" parameterType="java.util.List" resultMap="resultRfList">
			select * from room_file where room_no = 0
		<foreach collection="list" item="room">
			union select * from room_file where room_no = #{room.room_no} 
		</foreach>
		
	</select>
	
	<!-- 한개의 게시글 사진파일 조회 -->
	<select id="selectRoomFile" parameterType="int" resultMap="resultRfList">
		select * from room_file where room_no = #{roomno}
	</select>
	
	<select id="selectUserRoom" parameterType="string" resultMap="resultList">
		select * from room where user_id = #{uid}
	</select>
	
	<select id="selectRoom" parameterType="int" resultMap="resultRoom">
		select * from room where room_no = #{roomno}
	</select>
	
	<select id="selectReviewCount" parameterType="int" resultType="_int">
		select count(reply_no) from review where room_no = #{ room_no }
	</select> 
	
	<select id="selectRoomNo" parameterType="string" resultType="int">
		select nvl(max(room_no),1) from room where user_id = #{uid}
	</select>
	
	<select id="selectSearchFilter" parameterType="java.util.HashMap" resultMap="resultList">
		select * from 
			(select rownum rnum, room_no, user_id, room_name, room_content, room_address, room_roadaddress, max_people, checkin_time, checkout_time, bed, bedroom, 
			bathroom, amenity, facility, build_type, rule, pass_or_not, st_num_people, plus_charge, room_weekday, room_weekend from   
 				(select room_no, user_id, room_name, room_content, room_address, room_roadaddress, max_people, checkin_time, checkout_time, bed, bedroom, 
				bathroom, amenity, facility, build_type, rule, pass_or_not, st_num_people, plus_charge, room_weekday, room_weekend
     		    from room 
		<if test="alist != null">
			<foreach collection="alist" item="amenity">
				intersect select room_no, user_id, room_name, room_content, room_address, room_roadaddress, max_people, checkin_time, checkout_time, bed, bedroom, 
		bathroom, amenity, facility, build_type, rule, pass_or_not, st_num_people, plus_charge, room_weekday, room_weekend from room where amenity like '%'||#{amenity}||'%'				
			</foreach>
		</if>
		
		<if test="flist != null">
			<foreach collection="flist" item="facility">
				intersect select room_no, user_id, room_name, room_content, room_address, room_roadaddress, max_people, checkin_time, checkout_time, bed, bedroom, 
		bathroom, amenity, facility, build_type, rule, pass_or_not, st_num_people, plus_charge, room_weekday, room_weekend from room where facility like '%'||#{facility}||'%'
			</foreach>		
		</if>
		
		<if test="blist != null">
			<foreach collection="blist" item="build">
				intersect select room_no, user_id, room_name, room_content, room_address, room_roadaddress, max_people, checkin_time, checkout_time, bed, bedroom, 
		bathroom, amenity, facility, build_type, rule, pass_or_not, st_num_people, plus_charge, room_weekday, room_weekend from room where build_type like '%'||#{build}||'%'
			</foreach>
		</if>
		
		<if test="rlist != null">
			<foreach collection="rlit" item="rule">
			intersect select room_no, user_id, room_name, room_content, room_address, room_roadaddress, max_people, checkin_time, checkout_time, bed, bedroom, 
		bathroom, amenity, facility, build_type, rule, pass_or_not, st_num_people, plus_charge, room_weekday, room_weekend from room where rule like '%'||#{rule}||'%'
			</foreach>		
		</if>
		
		<if test="bed != 0">
		intersect select room_no, user_id, room_name, room_content, room_address, room_roadaddress, max_people, checkin_time, checkout_time, bed, bedroom, 
		bathroom, amenity, facility, build_type, rule, pass_or_not, st_num_people, plus_charge, room_weekday, room_weekend from room desc where bed = #{bed}
		</if>
		
		<if test="bedroom != 0">
		intersect select room_no, user_id, room_name, room_content, room_address, room_roadaddress, max_people, checkin_time, checkout_time, bed, bedroom, 
		bathroom, amenity, facility, build_type, rule, pass_or_not, st_num_people, plus_charge, room_weekday, room_weekend from room where bedroom = #{bedroom}
		</if>
		
		<if test="bathroom != 0">
		intersect select room_no, user_id, room_name, room_content, room_address, room_roadaddress, max_people, checkin_time, checkout_time, bed, bedroom, 
		bathroom, amenity, facility, build_type, rule, pass_or_not, st_num_people, plus_charge, room_weekday, room_weekend from room where bathroom = #{bathroom}
		</if>
		order by room_no))
		<![CDATA[
		where rnum >= #{startRow} and rnum <= #{endRow}
		]]>
	</select>
	
	<insert id="insertRoomLatLnt" parameterType="RoomLatLng">
		insert into room_latlng values(#{room_no}, #{room_lat}, #{room_lng})
	</insert>
	
	<insert id="insertRoom" parameterType="Room">
		insert into room values((select nvl(max(room_no),0) from room) + 1, #{user_id}, #{room_name }, #{room_content }, #{room_address }, #{room_roadaddress}, #{st_num_people }, #{ max_people},
		 #{ checkin_time}, #{checkout_time }, #{ bed}, #{bedroom }, #{bathroom },
		 <if test="amenity == null">
		 	null,
		 </if>
		 <if test="amenity != null">
		 	#{ amenity},
		 </if>
		 
		 <if test="facility == null">
		 	null,
		 </if>
		 <if test="facility != null">
		 	#{ facility}, 
		 </if>
		 
		 <if test="build_type == null">
		 	null,
		 </if>
		 <if test="build_type != null">
		 	#{build_type },
		 </if>
		 
		 <if test="rule == null">
		 	null,
		 </if>
		 <if test="rule != null">
		 	#{rule },
		 </if>
			default,  #{plus_charge }, 
		
		#{room_weekday}, #{room_weekend})
		
	</insert>
	
	<insert id="insertRoomFile" parameterType="Room_File" >	
			insert into room_file values((select nvl(max(room_file_no),0) +1 from room_file ), #{room_no}, #{original_file}, #{rename_file})
	</insert>
	
	<update id="updateRoom" parameterType="Room">
		update room set room_name = #{room_name}, room_content = #{room_content}, room_address=#{room_address}, room_roadaddress=#{room_roadaddress},st_num_people = #{ st_num_people }, 
		max_people = #{ max_people }, checkin_time = #{checkin_time}, checkout_time= #{checkout_time}, bed = #{ bed}, bedroom=#{bedroom}, bathroom = #{bathroom},
		
		 <if test="amenity != null">
		 	amenity = #{ amenity},
		 </if>
		 
		 <if test="facility != null">
		 	facility = #{ facility},
		 </if>
		 
		 <if test="build_type != null">
		 	build_type = #{build_type },
		 </if>
		 
		 <if test="rule != null">
		 	rule = #{rule },
		 </if>
		
		plus_charge = #{plus_charge}
		
		
		<if test="room_weekday != null">
			, room_weekday = #{room_weekday}
		</if>
		
		<if test="room_weekend != null">
			, room_weekend = #{room_weekend}
		</if>
		where room_no = #{room_no}
	</update>
	
	<update id="updateRoomChangePass" parameterType="String">
	update room set pass_or_not = 'Y' where user_id = #{user_id}
	</update>
	
	<delete id="deleteRoom" parameterType="int">
		delete from room where room_no = #{ room_no }
	</delete>
	
	<delete id="deleteRoomFile" parameterType="Room_File">
		delete from room_file where room_no = #{ room_no} and room_file_no = #{room_file_no}
	</delete>
	
	<delete id="deleteRoomRivew" parameterType="int">
		delete from review where room_no = #{ room_no}
	</delete>
</mapper>
